# render.yaml
# Instrucciones para que Render.com despliegue nuestro chatbot

services:
  # Servicio 1: El Servidor de Acciones (usando el Dockerfile)
  - type: web
    name: chatbot-actions
    env: docker
    # Ruta a tu Dockerfile dentro del repositorio
    dockerfilePath: ./actions/Dockerfile
    # Plan de servicio (Starter es suficiente para las acciones)
    plan: starter

  # Servicio 2: El Servidor Principal de RASA
  - type: web
    name: chatbot-rasa
    env: python
    # Plan de servicio (RASA necesita un poco más de memoria)
    plan: starter
    # Comandos que Render ejecutará para preparar y lanzar el servicio
    buildCommand: |
      pip install -r requirements.txt
      rasa train
    startCommand: rasa run --enable-api --cors "*"
    # Variables de entorno para conectar este servicio con el de acciones
    envVars:
      - key: ACTION_ENDPOINT_URL
        # Render automáticamente crea una URL interna con el nombre del otro servicio
        value: http://chatbot-actions:5055/webhook

  # Servicio 3: La Aplicación Web (Frontend)
  - type: web
    name: chatbot-frontend
    env: python
    # Plan de servicio
    plan: starter
    # Comandos de preparación y lanzamiento
    buildCommand: pip install -r requirements.txt
    startCommand: gunicorn app:app
    # Variables de entorno para conectar el frontend con el servidor RASA
    envVars:
      - key: RASA_API_URL
        value: http://chatbot-rasa:5005/webhooks/rest/webhook